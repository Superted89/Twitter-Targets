import processing.core.*; 
import processing.data.*; 
import processing.event.*; 
import processing.opengl.*; 

import ddf.minim.*; 
import processing.pdf.*; 
import java.util.Date; 
import ddf.minim.ugens.*; 

import twitter4j.conf.*; 
import sms.*; 
import twitter4j.internal.async.*; 
import twitter4j.internal.org.json.*; 
import twitter4j.internal.logging.*; 
import twitter4j.json.*; 
import twitter4j.internal.util.*; 
import twitter4j.management.*; 
import twitter4j.auth.*; 
import twitter4j.api.*; 
import twitter4j.util.*; 
import twitter4j.internal.http.*; 
import twitter4j.*; 
import twitter4j.internal.json.*; 

import java.util.HashMap; 
import java.util.ArrayList; 
import java.io.File; 
import java.io.BufferedReader; 
import java.io.PrintWriter; 
import java.io.InputStream; 
import java.io.OutputStream; 
import java.io.IOException; 

public class Twitter_Targets_BETA extends PApplet {

static String OAuthConsumerKey    = "enter your consumer key";
static String OAuthConsumerSecret = "enter your consumer secret";
static String AccessToken         = "enter your access token";
static String AccessTokenSecret   = "enter your access token secret";
String myTimeline;
String  myQueryWord = "cheese";
java.util.List statuses = null;
User[] friends;
TwitterFactory twitterFactory;
Twitter twitter;
RequestToken requestToken;
String[] theSearchTweets = new String[11];
long previousIdOfTweetContainingQuery = 0;
private static AccessToken loadAccessToken() {
  return new AccessToken(AccessToken, AccessTokenSecret); // get my oauth details
}


String [] headlines;
public float inByte;
public String msg; //the tweets 
public int speed;
public float total = 20.00f;
boolean locked;

String typing = ""; // enter new tweet
String saved = ""; //save tweet to search
ArrayList<Tweets> tweets; //tweets array
boolean running = true; 
boolean pull;
int delayTime = 2000;
PrintWriter output; //write to txt file
PImage img;
PImage forest;
PImage bullet;
PImage ammoi;
PImage lockedi;
PImage unlockedi;
PFont font;
PFont arial;
boolean start;
boolean runOnce = true;
boolean keyed;
int score = 0;
int playButtonWidth, playButtonHeight;
int playButtonX, playButtonY;
int ammo = 5;
int middle = displayWidth/3 + displayWidth/9;
Minim minim;
AudioSample bang;
AudioSample hit;
AudioSample reload;
AudioPlayer forestSound;


public void setup() {
  size(1280, 800); 
  frame.setTitle("Twitter Targets BETA!!");
  font = createFont("PICOWA__.TTF", 20);       //Fonts
  arial = createFont("Arial", 80);
  textFont(font, 20);
  
  img = loadImage("twitter_bird.png");         //Images
  forest = loadImage("clouds.png");
  bullet = loadImage("bullet.jpg");
  ammoi = loadImage("ammo.png");
  lockedi = loadImage("locked.png");
  unlockedi = loadImage("unlocked.png");
  myQueryWord = "";
   
  minim = new Minim(this);                     //Sounds
  bang = minim.loadSample("bang.mp3");
  hit = minim.loadSample("hit.mp3");
  forestSound = minim.loadFile("forest.mp3");
  reload = minim.loadSample("reload.mp3");
  forestSound.play();
 


}

public void draw() {

  if (start == true) {
    gameScreen();                     //Game
  }
  else if (start == false) {
    welcomeScreen();                  //Welcome screen
  }
  
  if ((total <= 0.0f) && (start == true)){
    gameOver();                       //Game over screen
}
}


